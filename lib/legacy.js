"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var escape=_interopDefault(require("lodash.escape")),JSZip=_interopDefault(require("jszip")),FileSaver=_interopDefault(require("file-saver"));const CELL_TYPE_STRING="string",CELL_TYPE_NUMBER="number",validTypes=["string","number"],MISSING_KEY_FILENAME="Zipclex config missing property filename",INVALID_TYPE_FILENAME="Zipclex filename can only be of type string",INVALID_TYPE_SHEET="Zipcelx sheet data is not of type array",INVALID_TYPE_SHEET_DATA="Zipclex sheet data childs is not of type array",WARNING_INVALID_TYPE='Invalid type supplied in cell config, falling back to "string"',childValidator=e=>e.every(e=>Array.isArray(e));var validator=e=>e.filename?"string"!=typeof e.filename?(console.error(INVALID_TYPE_FILENAME),!1):Array.isArray(e.sheet.data)?!!childValidator(e.sheet.data)||(console.error(INVALID_TYPE_SHEET_DATA),!1):(console.error(INVALID_TYPE_SHEET),!1):(console.error(MISSING_KEY_FILENAME),!1);const generateColumnLetter=e=>{if("number"!=typeof e)return"";const t=Math.floor(e/26),o=String.fromCharCode(97+e%26).toUpperCase();return 0===t?o:generateColumnLetter(t-1)+o};var generatorCellNumber=(e,t)=>`${generateColumnLetter(e)}${t}`,generatorStringCell=(e,t,o,n)=>{let l=`<c r="${generatorCellNumber(e,o)}"`;return n&&(l+=` s="${n}"`),l+=` t="inlineStr"><is><t>${escape(t)}</t></is></c>`},generatorNumberCell=(e,t,o,n)=>{let l=`<c r="${generatorCellNumber(e,o)}"`;return n&&(l+=` s="${n}"`),l+=`><v>${t}</v></c>`},formatCell=(e,t,o,n)=>(-1===validTypes.indexOf(e.type)&&(console.warn(WARNING_INVALID_TYPE),e.type="string"),"string"===e.type?generatorStringCell(t,e.value,o,e.style?e.style.toString():""):generatorNumberCell(t,e.value,o,e.style?e.style.toString():"")),formatRow=(e,t,o)=>{const n=t+1,l=e.map((e,t)=>formatCell(e,t,n,o)).join("");return`<row r="${n}">${l}</row>`},generatorRows=(e,t)=>e.map((e,o)=>formatRow(e,o,t)).join(""),workbookXML='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mx="http://schemas.microsoft.com/office/mac/excel/2008/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="urn:schemas-microsoft-com:mac:vml" xmlns:x14="http://schemas.microsoft.com/office/spreadsheetml/2009/9/main" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac" xmlns:xm="http://schemas.microsoft.com/office/excel/2006/main"><workbookPr/><sheets><sheet state="visible" name="Sheet1" sheetId="1" r:id="rId3"/></sheets><definedNames/><calcPr/></workbook>',workbookXMLRels='<?xml version="1.0" ?>\n<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n<Relationship Id="rId3" Target="worksheets/sheet1.xml" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet"/>\n<Relationship Id="rId4" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml" />\n</Relationships>',rels='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',contentTypes='<?xml version="1.0" ?>\n<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">\n<Default ContentType="application/xml" Extension="xml"/>\n<Default ContentType="application/vnd.openxmlformats-package.relationships+xml" Extension="rels"/>\n<Override ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" PartName="/xl/worksheets/sheet1.xml"/>\n<Override ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" PartName="/xl/workbook.xml"/>\n<Override ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" PartName="/xl/styles.xml"/>\n</Types>',templateSheet='<?xml version="1.0" ?>\n<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="urn:schemas-microsoft-com:mac:vml" xmlns:mx="http://schemas.microsoft.com/office/mac/excel/2008/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:x14="http://schemas.microsoft.com/office/spreadsheetml/2009/9/main" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac" xmlns:xm="http://schemas.microsoft.com/office/excel/2006/main"><sheetData>{placeholder}</sheetData></worksheet>',styleTemplate='<?xml version="1.0" encoding="utf-8" standalone="yes"?>\n<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">{placeholder}</styleSheet>',styleInnerTemplate='<fonts count="1">\n<fonts count="1" x14ac:knownFonts="1">\n        <font>\n            <sz val="11"/>\n            <color theme="1"/>\n            <name val="Calibri"/>\n            <family val="2"/>\n            <scheme val="minor"/>\n        </font>\n    </fonts>\n{fillsPlaceholder}\n<borders count="1">\n    <border>\n        <left/>\n        <right/>\n        <top/>\n        <bottom/>\n        <diagonal/>\n    </border>\n</borders>\n<cellStyleXfs count="1">\n    <xf numFmtId="0" fontId="0" fillId="0" borderId="0"/>\n</cellStyleXfs>\n<cellXfs count="2">\n    <xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0"/>\n    <xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0" applyAlignment="1">\n        <alignment wrapText="1"/>\n    </xf>\n</cellXfs>\n<cellStyles count="1">\n    <cellStyle name="Normal" xfId="0" builtinId="0"/>\n</cellStyles>';const generateXMLWorksheet=(e,t)=>{const o=generatorRows(e,t);return templateSheet.replace("{placeholder}",o)};var zipcelx=e=>{if(!validator(e))throw new Error("Validation failed.");const t=new JSZip,o=t.folder("xl");o.file("workbook.xml",workbookXML),o.file("_rels/workbook.xml.rels",workbookXMLRels),t.file("_rels/.rels",rels),t.file("[Content_Types].xml",contentTypes);const n=[],l=generateXMLWorksheet(e.sheet.data,n);o.file("worksheets/sheet1.xml",l);const s=[];for(let e=0;e<n.length;e++)if(n[e].indexOf("bgColor=")>-1){const t=n[e].indexOf('"',n[e].indexOf("bgColor=")),o=n[e].indexOf('"',t+1),l=n[e].substring(t+1,o);s.push(l)}let r=`<fills count="${s.length+2}"><fill /><fill><patternFill patternType="gray125"/></fill>`;for(let e=0;e<s.length;e++)r+=`<fill><patternFill patternType="solid"><fgColor indexed="${e}"/></patternFill></fill>`;r+="</fills>";const a=styleInnerTemplate.replace("{fillsPlaceholder}",r),m=styleTemplate.replace("{placeholder}",a);return o.file("styles.xml",m),t.generateAsync({type:"blob",mimeType:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}).then(t=>{FileSaver.saveAs(t,`${e.filename}.xlsx`)})};exports.generateXMLWorksheet=generateXMLWorksheet,exports.default=zipcelx;
